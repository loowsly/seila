javascript:(async function(){  const ID = 'ia-assistant-float';  if (document.getElementById(ID)) return document.getElementById(ID).remove();  const models = ['openai/gpt-3.5-turbo', 'openai/gpt-4', 'google/gemini-pro-1.5', 'mistralai/mixtral-8x7b'];  const endpoint = 'https://seila-lemon.vercel.app/api/chat';  const container = document.createElement('div');  container.id = ID;  container.style = `    all: initial;    position: fixed;    top: 10px;    right: 10px;    width: 320px;    background: white;    border: 1px solid #ccc;    padding: 10px;    font-family: sans-serif;    font-size: 14px;    z-index: 99999;    box-shadow: 0 2px 10px rgba(0,0,0,0.2);  %60;  container.innerHTML = %60    <div style="margin-bottom: 5px; font-weight: bold;">🤖 IA Assistant</div>    <label>Modelo:      <select id="ia-model" style="width: 100%; margin: 5px 0;">${models.map(m => %60<option>${m}</option>%60).join('')}</select>    </label>    <textarea id="ia-prompt" placeholder="Digite a pergunta ou cole o link da imagem..." style="width:100%;height:60px;"></textarea>    <button id="ia-send" style="margin-top:5px;width:100%;">Enviar</button>    <pre id="ia-output" style="white-space: pre-wrap; max-height: 150px; overflow-y: auto; background: #f9f9f9; margin-top: 8px; padding: 5px; border: 1px solid #ddd;"></pre>    <div style="text-align:center; font-size: 11px; margin-top:5px; color: #888;">[Pressione "1" para ocultar]</div>  %60;  document.body.appendChild(container);  document.getElementById('ia-send').onclick = async () => {    const modelId = document.getElementById('ia-model').value;    const input = document.getElementById('ia-prompt').value.trim();    const output = document.getElementById('ia-output');    output.textContent = '⏳ Carregando...';    const isImage = input.startsWith('http') && /\.(jpg|jpeg|png|webp|gif)$/i.test(input);    const payload = {      modelId,      messages: isImage        ? [{ role: "user", content: "Descreva o conteúdo da imagem." }]        : [{ role: "user", content: input }],    };    if (isImage) {      payload.imageUrl = input;    }    try {      const res = await fetch(endpoint, {        method: 'POST',        headers: { 'Content-Type': 'application/json' },        body: JSON.stringify(payload)      });      const json = await res.json();      output.textContent = json.response || '[❌ Sem resposta]';    } catch (err) {      output.textContent = '❌ Erro ao consultar: ' + err.message;    }  };  window.addEventListener('keydown', e => {    if (e.key === '1') {      container.style.display = container.style.display === 'none' ? 'block' : 'none';    }  });})();
